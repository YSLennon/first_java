--1. 함수 연습문제
--호출 : FORMAT_DATE2(날짜데이터, 'DATETIME or DATE or TIME');
--결과 :  -- 'DATETIME' -> YYYY-MM-DD HH24:MI:SS
--       -- 'DATE' -> YYYY-MM-DD
--       -- 'TIME' -> HH24:MI:SS
CREATE OR REPLACE FUNCTION FORMAT_DATE2(PDATE DATE, DATETYPE VARCHAR)
RETURN CHAR
IS
BEGIN
    IF DATETYPE = 'DATETIME' THEN
        RETURN TO_CHAR(PDATE, 'YYYY-MM-DD HH24:MI:SS');
    ELSIF DATETYPE = 'DATE' THEN
        RETURN TO_CHAR(PDATE, 'YYYY-MM-DD');
    ELSIF DATETYPE = 'TIME' THEN
        RETURN TO_CHAR(PDATE, 'HH24:MI:SS');
    END IF;
END;
/
SELECT FORMAT_DATE2(SYSDATE, 'DATETIME')
FROM DUAL;

--2. 프로시저 연습문제(대상 테이블 : PROFESSOR)
--호출 : EXECUTE PROF_SAL(교수번호(PROFNO), 증가율(숫자 값))
--결과 : 교수번호에 해당하는 사람의 급여가 숫자 값만큼 증가(10을 넣을 경우 10% 증가)
CREATE OR REPLACE PROCEDURE PROF_SAL(
    P_PROFNO IN PROFESSOR.PROFNO%TYPE,
    P_INCREASE IN NUMBER)
IS
BEGIN
    UPDATE PROFESSOR
    SET PAY = PAY*(100+P_INCREASE)/100
    WHERE PROFNO = P_PROFNO;
END;
/
SELECT*FROM PROFESSOR;
EXECUTE PROF_SAL(1001,10);

ROLLBACK;

--3. 트리거 연습문제(대상 테이블 : PROFESSOR)
--테이블 생성 : 
--	테이블명 => PROFESSOR_LOG
--	컬럼 => PROFNO(NUMBER), NAME(VARCHAR(20)), PAY(NUMBER), ID, CDATETIME(DATE), EVENT(VARCHAR(10))
--
--호출 : PROFESSOR 테이블의 INSERT, UPDATE, DELETE
--결과 : 
--	INSERT => PROFESSOR_LOG 테이블에 각 컬럼 값 채우기, EVENT의 경우 'I'로 삽입
--	UPDATE => PROFESSOR_LOG 테이블에 각 컬럼 값 채우기, EVENT의 경우 'U'로 삽입
--	DELETE => 사용자 정의 오류를 생성 후 '삭제 불가능' 오류 메시지 출력
CREATE TABLE PROFESSOR_LOG(
    PROFNO NUMBER,
    NAME VARCHAR(20),
    PAY NUMBER,
    ID VARCHAR(20),
    CDATETIME DATE,
    EVENT VARCHAR(10)
);

CREATE OR REPLACE TRIGGER TRG_PROF
    AFTER
    INSERT OR UPDATE OR DELETE ON PROFESSOR
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO PROFESSOR_LOG
            VALUES (:NEW.PROFNO, :NEW.NAME, :NEW.PAY,:NEW.ID,SYSDATE, 'I');
    ELSIF UPDATING THEN
        INSERT INTO PROFESSOR_LOG
            VALUES (:NEW.PROFNO, :NEW.NAME, :NEW.PAY,:NEW.ID,SYSDATE, 'U');
    ELSIF DELETING THEN
        RAISE_APPLICATION_ERROR(-20000, '삭제 불가능');
    END IF;
END;
/

SELECT * FROM PROFESSOR;
SELECT * FROM PROFESSOR_LOG;
INSERT INTO PROFESSOR
    VALUES(9999, 'NAME', 'ID', 'POSITION', 100,SYSDATE, NULL, 101, 'EMAIL', NULL);
UPDATE PROFESSOR
    SET PAY = 150
    WHERE NAME = 'NAME';
DELETE FROM PROFESSOR WHERE NAME = 'NAME';
